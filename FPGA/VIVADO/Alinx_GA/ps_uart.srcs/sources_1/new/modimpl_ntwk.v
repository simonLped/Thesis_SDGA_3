// -------------------------------------------------------------
// 
// File Name: DUAL_port_RAM_and_GA4\hdlsrc\DUALportRAMinterface_v3\modimpl_ntwk.v
// Created: 2024-05-15 10:45:59
// 
// Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: modimpl_ntwk
// Source Path: DUALportRAMinterface_v3/PL/integration_block1/Subsystem/a2_random/modimpl_ntwk
// Hierarchy Level: 4
// Model version: 1.52
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module modimpl_ntwk
          (clk,
           reset_x,
           enb,
           X,
           validIn,
           Y,
           validOut);


  input   clk;
  input   reset_x;
  input   enb;
  input   [10:0] X;  // ufix11_En11
  input   validIn;
  output  [51:0] Y;  // ufix52_En57
  output  validOut;


  reg [10:0] multiply_and_extract_fraction_xReg0;  // ufix11
  reg [10:0] multiply_and_extract_fraction_xReg1;  // ufix11
  reg [68:0] multiply_and_extract_fraction_invReg0;  // ufix69
  reg [73:0] multiply_and_extract_fraction_fracReg;  // ufix74
  reg [51:0] multiply_and_extract_fraction_outReg;  // ufix52
  wire [73:0] multiply_and_extract_fraction_fracReg_next;  // ufix74_En74
  wire [51:0] multiply_and_extract_fraction_outReg_next;  // ufix52_En57
  wire [125:0] multiply_and_extract_fraction_mul_temp;  // ufix126_En131
  wire [79:0] multiply_and_extract_fraction_mul_temp_1;  // ufix80_En74


  // cgireml component
  always @(posedge clk)
    begin : multiply_and_extract_fraction_process
      if (reset_x == 1'b0) begin
        multiply_and_extract_fraction_xReg0 <= 11'b00000000000;
        multiply_and_extract_fraction_xReg1 <= 11'b00000000000;
        multiply_and_extract_fraction_invReg0 <= 69'h000000000000000000;
        multiply_and_extract_fraction_fracReg <= 74'h0000000000000000000;
        multiply_and_extract_fraction_outReg <= 52'h0000000000000;
      end
      else begin
        if (enb) begin
          multiply_and_extract_fraction_fracReg <= multiply_and_extract_fraction_fracReg_next;
          multiply_and_extract_fraction_outReg <= multiply_and_extract_fraction_outReg_next;
          multiply_and_extract_fraction_xReg0 <= X;
          multiply_and_extract_fraction_xReg1 <= multiply_and_extract_fraction_xReg0;
          multiply_and_extract_fraction_invReg0 <= 69'h13FFFFFFFFFFFFB001;
        end
      end
    end

  assign Y = multiply_and_extract_fraction_outReg;
  assign multiply_and_extract_fraction_mul_temp = multiply_and_extract_fraction_fracReg * 52'hCCCCCCCCCCCCD;
  assign multiply_and_extract_fraction_outReg_next = multiply_and_extract_fraction_mul_temp[125:74];
  assign multiply_and_extract_fraction_mul_temp_1 = multiply_and_extract_fraction_xReg1 * multiply_and_extract_fraction_invReg0;
  assign multiply_and_extract_fraction_fracReg_next = multiply_and_extract_fraction_mul_temp_1[73:0];



  assign validOut = 1'b0;



endmodule  // modimpl_ntwk

