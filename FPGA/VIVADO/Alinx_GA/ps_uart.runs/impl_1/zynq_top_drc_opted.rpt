Copyright 1986-2022 Xilinx, Inc. All Rights Reserved. Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
---------------------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2023.1 (win64) Build 3865809 Sun May  7 15:05:29 MDT 2023
| Date         : Thu May 16 20:40:45 2024
| Host         : DESKTOP-4RDNORI running 64-bit major release  (build 9200)
| Command      : report_drc -file zynq_top_drc_opted.rpt -pb zynq_top_drc_opted.pb -rpx zynq_top_drc_opted.rpx
| Design       : zynq_top
| Device       : xc7z020clg400-2
| Speed File   : -2
| Design State : Synthesized
---------------------------------------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: checkpoint_zynq_top
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 312
+--------+----------+------------------------+------------+
| Rule   | Severity | Description            | Violations |
+--------+----------+------------------------+------------+
| DPIP-1 | Warning  | Input pipelining       | 82         |
| DPOP-1 | Warning  | PREG Output pipelining | 87         |
| DPOP-2 | Warning  | MREG Output pipelining | 143        |
+--------+----------+------------------------+------------+

2. REPORT DETAILS
-----------------
DPIP-1#1 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp input PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#2 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0 input PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#3 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__1 input PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#4 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__2 input PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#5 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3 input PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#6 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg input PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#7 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__0 input PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#8 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__1 input PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#9 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__2 input PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#10 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__3 input PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#11 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp input PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#12 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0 input PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#13 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__1 input PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#14 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__2 input PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#15 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3 input PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#16 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg input PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#17 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__0 input PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#18 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__1 input PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#19 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__2 input PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#20 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__3 input PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#21 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp input PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#22 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0 input PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#23 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__1 input PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#24 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__2 input PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#25 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3 input PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#26 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg input PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#27 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__0 input PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#28 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__1 input PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#29 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__2 input PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#30 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp input PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#31 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0 input PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#32 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__1 input PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#33 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__2 input PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#34 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3 input PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#35 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg input PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#36 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__0 input PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#37 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__1 input PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#38 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__2 input PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#39 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__3 input PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#40 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp input PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#41 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0 input PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#42 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__1 input PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#43 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__2 input PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#44 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3 input PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#45 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg input PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#46 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__0 input PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#47 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__1 input PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#48 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__2 input PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#49 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__3 input PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#50 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp input PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#51 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0 input PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#52 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__1 input PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#53 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__2 input PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#54 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3 input PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#55 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg input PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#56 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__0 input PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#57 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__1 input PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#58 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__2 input PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#59 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp input PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#60 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp input PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#61 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1 input PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#62 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1 input PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#63 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__0 input PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#64 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__0 input PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#65 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__1 input PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#66 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__1 input PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#67 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__2 input PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#68 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__3 input PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#69 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__3 input PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#70 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__4 input PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__4/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#71 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__6 input PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__6/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#72 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__7 input PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__7/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#73 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__0 input PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#74 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__0 input PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#75 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__1 input PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#76 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__1 input PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#77 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__2 input PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#78 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__3 input PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#79 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__3 input PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#80 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__4 input PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__4/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#81 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__6 input PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__6/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#82 Warning
Input pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__7 input PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__7/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-1#1 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product1_mul_temp output PL_i/u_integration_block1/u_D2/Product1_mul_temp/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#2 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product1_mul_temp__0 output PL_i/u_integration_block1/u_D2/Product1_mul_temp__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#3 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product1_mul_temp__2 output PL_i/u_integration_block1/u_D2/Product1_mul_temp__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#4 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product1_mul_temp__3 output PL_i/u_integration_block1/u_D2/Product1_mul_temp__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#5 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product1_mul_temp__4 output PL_i/u_integration_block1/u_D2/Product1_mul_temp__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#6 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product1_mul_temp__6 output PL_i/u_integration_block1/u_D2/Product1_mul_temp__6/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#7 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product2_mul_temp output PL_i/u_integration_block1/u_D2/Product2_mul_temp/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#8 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product2_mul_temp__0 output PL_i/u_integration_block1/u_D2/Product2_mul_temp__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#9 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product2_mul_temp__2 output PL_i/u_integration_block1/u_D2/Product2_mul_temp__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#10 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product2_mul_temp__3 output PL_i/u_integration_block1/u_D2/Product2_mul_temp__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#11 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product2_mul_temp__4 output PL_i/u_integration_block1/u_D2/Product2_mul_temp__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#12 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product2_mul_temp__6 output PL_i/u_integration_block1/u_D2/Product2_mul_temp__6/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#13 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product3_mul_temp output PL_i/u_integration_block1/u_D2/Product3_mul_temp/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#14 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product3_mul_temp__0 output PL_i/u_integration_block1/u_D2/Product3_mul_temp__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#15 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product3_mul_temp__1 output PL_i/u_integration_block1/u_D2/Product3_mul_temp__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#16 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product3_mul_temp__2 output PL_i/u_integration_block1/u_D2/Product3_mul_temp__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#17 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product3_mul_temp__3 output PL_i/u_integration_block1/u_D2/Product3_mul_temp__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#18 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product4_mul_temp output PL_i/u_integration_block1/u_D2/Product4_mul_temp/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#19 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product4_mul_temp__0 output PL_i/u_integration_block1/u_D2/Product4_mul_temp__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#20 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product4_mul_temp__1 output PL_i/u_integration_block1/u_D2/Product4_mul_temp__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#21 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product4_mul_temp__2 output PL_i/u_integration_block1/u_D2/Product4_mul_temp__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#22 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product4_mul_temp__3 output PL_i/u_integration_block1/u_D2/Product4_mul_temp__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#23 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product5_mul_temp output PL_i/u_integration_block1/u_D2/Product5_mul_temp/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#24 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product5_mul_temp__0 output PL_i/u_integration_block1/u_D2/Product5_mul_temp__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#25 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product5_mul_temp__1 output PL_i/u_integration_block1/u_D2/Product5_mul_temp__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#26 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product5_mul_temp__2 output PL_i/u_integration_block1/u_D2/Product5_mul_temp__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#27 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product5_mul_temp__3 output PL_i/u_integration_block1/u_D2/Product5_mul_temp__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#28 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product_mul_temp output PL_i/u_integration_block1/u_D2/Product_mul_temp/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#29 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product_mul_temp__0 output PL_i/u_integration_block1/u_D2/Product_mul_temp__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#30 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product_mul_temp__2 output PL_i/u_integration_block1/u_D2/Product_mul_temp__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#31 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product_mul_temp__3 output PL_i/u_integration_block1/u_D2/Product_mul_temp__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#32 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product_mul_temp__4 output PL_i/u_integration_block1/u_D2/Product_mul_temp__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#33 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product_mul_temp__6 output PL_i/u_integration_block1/u_D2/Product_mul_temp__6/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#34 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult1_im_pipe10 output PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult1_im_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#35 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult1_im_pipe10__0 output PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult1_im_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#36 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult1_re_pipe10 output PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult1_re_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#37 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult1_re_pipe10__0 output PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult1_re_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#38 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult2_im_pipe10 output PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult2_im_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#39 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult2_im_pipe10__0 output PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult2_im_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#40 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult2_re_pipe10 output PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult2_re_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#41 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult2_re_pipe10__0 output PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult2_re_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#42 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp output PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#43 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1 output PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#44 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1__0 output PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#45 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0 output PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#46 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3 output PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#47 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__4 output PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#48 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp output PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#49 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1 output PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#50 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1__0 output PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#51 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0 output PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#52 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3 output PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#53 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__4 output PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#54 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp output PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#55 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1 output PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#56 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1__0 output PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#57 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0 output PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#58 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3 output PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#59 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__4 output PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#60 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp output PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#61 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1 output PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#62 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1__0 output PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#63 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0 output PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#64 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3 output PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#65 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__4 output PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#66 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp output PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#67 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1 output PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#68 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1__0 output PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#69 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0 output PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#70 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3 output PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#71 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__4 output PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#72 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp output PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#73 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1 output PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#74 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1__0 output PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#75 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0 output PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#76 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3 output PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#77 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__4 output PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#78 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__0 output PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#79 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__1 output PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#80 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__4 output PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#81 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__5 output PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__5/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#82 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__7 output PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__7/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#83 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__0 output PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#84 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__1 output PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#85 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__4 output PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#86 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__5 output PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__5/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#87 Warning
PREG Output pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__7 output PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__7/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-2#1 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product1_mul_temp multiplier stage PL_i/u_integration_block1/u_D2/Product1_mul_temp/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#2 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product1_mul_temp__0 multiplier stage PL_i/u_integration_block1/u_D2/Product1_mul_temp__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#3 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product1_mul_temp__2 multiplier stage PL_i/u_integration_block1/u_D2/Product1_mul_temp__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#4 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product1_mul_temp__3 multiplier stage PL_i/u_integration_block1/u_D2/Product1_mul_temp__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#5 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product1_mul_temp__4 multiplier stage PL_i/u_integration_block1/u_D2/Product1_mul_temp__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#6 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product1_mul_temp__6 multiplier stage PL_i/u_integration_block1/u_D2/Product1_mul_temp__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#7 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product2_mul_temp multiplier stage PL_i/u_integration_block1/u_D2/Product2_mul_temp/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#8 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product2_mul_temp__0 multiplier stage PL_i/u_integration_block1/u_D2/Product2_mul_temp__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#9 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product2_mul_temp__2 multiplier stage PL_i/u_integration_block1/u_D2/Product2_mul_temp__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#10 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product2_mul_temp__3 multiplier stage PL_i/u_integration_block1/u_D2/Product2_mul_temp__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#11 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product2_mul_temp__4 multiplier stage PL_i/u_integration_block1/u_D2/Product2_mul_temp__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#12 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product2_mul_temp__6 multiplier stage PL_i/u_integration_block1/u_D2/Product2_mul_temp__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#13 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product3_mul_temp multiplier stage PL_i/u_integration_block1/u_D2/Product3_mul_temp/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#14 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product3_mul_temp__0 multiplier stage PL_i/u_integration_block1/u_D2/Product3_mul_temp__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#15 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product3_mul_temp__1 multiplier stage PL_i/u_integration_block1/u_D2/Product3_mul_temp__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#16 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product3_mul_temp__2 multiplier stage PL_i/u_integration_block1/u_D2/Product3_mul_temp__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#17 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product3_mul_temp__3 multiplier stage PL_i/u_integration_block1/u_D2/Product3_mul_temp__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#18 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product4_mul_temp multiplier stage PL_i/u_integration_block1/u_D2/Product4_mul_temp/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#19 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product4_mul_temp__0 multiplier stage PL_i/u_integration_block1/u_D2/Product4_mul_temp__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#20 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product4_mul_temp__1 multiplier stage PL_i/u_integration_block1/u_D2/Product4_mul_temp__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#21 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product4_mul_temp__2 multiplier stage PL_i/u_integration_block1/u_D2/Product4_mul_temp__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#22 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product4_mul_temp__3 multiplier stage PL_i/u_integration_block1/u_D2/Product4_mul_temp__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#23 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product5_mul_temp multiplier stage PL_i/u_integration_block1/u_D2/Product5_mul_temp/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#24 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product5_mul_temp__0 multiplier stage PL_i/u_integration_block1/u_D2/Product5_mul_temp__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#25 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product5_mul_temp__1 multiplier stage PL_i/u_integration_block1/u_D2/Product5_mul_temp__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#26 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product5_mul_temp__2 multiplier stage PL_i/u_integration_block1/u_D2/Product5_mul_temp__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#27 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product5_mul_temp__3 multiplier stage PL_i/u_integration_block1/u_D2/Product5_mul_temp__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#28 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product_mul_temp multiplier stage PL_i/u_integration_block1/u_D2/Product_mul_temp/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#29 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product_mul_temp__0 multiplier stage PL_i/u_integration_block1/u_D2/Product_mul_temp__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#30 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product_mul_temp__2 multiplier stage PL_i/u_integration_block1/u_D2/Product_mul_temp__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#31 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product_mul_temp__3 multiplier stage PL_i/u_integration_block1/u_D2/Product_mul_temp__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#32 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product_mul_temp__4 multiplier stage PL_i/u_integration_block1/u_D2/Product_mul_temp__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#33 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_D2/Product_mul_temp__6 multiplier stage PL_i/u_integration_block1/u_D2/Product_mul_temp__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#34 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult1_im_pipe10 multiplier stage PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult1_im_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#35 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult1_im_pipe10__0 multiplier stage PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult1_im_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#36 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg multiplier stage PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#37 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg__0 multiplier stage PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#38 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult1_re_pipe10 multiplier stage PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult1_re_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#39 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult1_re_pipe10__0 multiplier stage PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult1_re_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#40 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg multiplier stage PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#41 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg__0 multiplier stage PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#42 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult2_im_pipe10 multiplier stage PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult2_im_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#43 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult2_im_pipe10__0 multiplier stage PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult2_im_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#44 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg multiplier stage PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#45 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg__0 multiplier stage PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#46 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult2_re_pipe10 multiplier stage PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult2_re_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#47 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult2_re_pipe10__0 multiplier stage PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult2_re_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#48 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg multiplier stage PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#49 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg__0 multiplier stage PL_i/u_integration_block1/u_FFT/u_MinResRX2FFT_BUTTERFLY/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#50 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_fracReg_reg multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_fracReg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#51 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_fracReg_reg__0 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_fracReg_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#52 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#53 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#54 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1__0 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#55 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#56 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#57 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__4 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#58 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#59 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__0 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#60 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__1 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#61 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__2 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#62 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__3 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#63 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__4 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#64 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__5 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#65 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_fracReg_reg multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_fracReg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#66 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_fracReg_reg__0 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_fracReg_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#67 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#68 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#69 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1__0 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#70 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#71 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#72 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__4 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#73 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#74 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__0 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#75 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__1 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#76 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__2 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#77 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__3 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#78 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__4 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#79 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__5 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#80 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_fracReg_reg multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_fracReg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#81 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_fracReg_reg__0 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_fracReg_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#82 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#83 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#84 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1__0 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#85 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#86 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#87 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__4 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#88 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#89 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__0 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#90 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__1 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#91 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__2 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#92 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__3 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#93 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__4 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_a4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#94 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_fracReg_reg multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_fracReg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#95 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_fracReg_reg__0 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_fracReg_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#96 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#97 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#98 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1__0 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#99 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#100 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#101 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__4 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#102 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#103 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__0 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#104 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__1 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#105 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__2 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#106 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__3 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#107 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__4 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#108 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__5 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b2_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#109 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_fracReg_reg multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_fracReg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#110 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_fracReg_reg__0 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_fracReg_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#111 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#112 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#113 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1__0 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp_1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#114 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#115 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#116 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__4 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#117 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#118 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__0 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#119 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__1 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#120 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__2 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#121 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__3 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#122 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__4 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#123 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__5 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b3_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#124 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#125 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#126 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#127 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__4 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_mul_temp__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#128 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#129 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__0 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#130 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__1 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#131 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__2 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#132 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__3 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#133 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__4 multiplier stage PL_i/u_integration_block1/u_Subsystem/u_b4_random/u_mod_by_constant/multiply_and_extract_fraction_outReg_reg__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#134 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__0 multiplier stage PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#135 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__1 multiplier stage PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#136 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__4 multiplier stage PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#137 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__5 multiplier stage PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#138 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__7 multiplier stage PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp_1__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#139 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__0 multiplier stage PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#140 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__1 multiplier stage PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#141 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__4 multiplier stage PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#142 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__5 multiplier stage PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#143 Warning
MREG Output pipelining  
DSP PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__7 multiplier stage PL_i/u_integration_block1/u_accumulator_scorer/multiplier_mul_temp__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>


