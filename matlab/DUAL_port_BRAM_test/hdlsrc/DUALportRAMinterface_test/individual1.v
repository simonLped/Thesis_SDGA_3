// -------------------------------------------------------------
// 
// File Name: DUAL_port_BRAM_test\hdlsrc\DUALportRAMinterface_test\individual1.v
// Created: 2024-05-15 22:08:20
// 
// Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: individual1
// Source Path: DUALportRAMinterface_test/PL/individual1
// Hierarchy Level: 1
// Model version: 1.58
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module individual1
          (clk,
           reset_x,
           enb,
           reg_in,
           reg_in1,
           reg_in2,
           reg_in3,
           reg_in4,
           reg_in5,
           reg_in6,
           enable,
           score,
           a2,
           a3,
           a4,
           b2,
           b3,
           b4);


  input   clk;
  input   reset_x;
  input   enb;
  input   [31:0] reg_in;  // uint32
  input   [31:0] reg_in1;  // uint32
  input   [31:0] reg_in2;  // uint32
  input   [31:0] reg_in3;  // uint32
  input   [31:0] reg_in4;  // uint32
  input   [31:0] reg_in5;  // uint32
  input   [31:0] reg_in6;  // uint32
  input   enable;
  output  [31:0] score;  // uint32
  output  [31:0] a2;  // uint32
  output  [31:0] a3;  // uint32
  output  [31:0] a4;  // uint32
  output  [31:0] b2;  // uint32
  output  [31:0] b3;  // uint32
  output  [31:0] b4;  // uint32


  wire [31:0] Subsystem_out1;  // uint32
  wire [31:0] Subsystem1_out1;  // uint32
  wire [31:0] Subsystem2_out1;  // uint32
  wire [31:0] Subsystem3_out1;  // uint32
  wire [31:0] Subsystem4_out1;  // uint32
  wire [31:0] Subsystem5_out1;  // uint32
  wire [31:0] Subsystem6_out1;  // uint32


  Subsystem u_Subsystem (.clk(clk),
                         .reset_x(reset_x),
                         .enb(enb),
                         .reg_in(reg_in),  // uint32
                         .enable(enable),
                         .reg_out(Subsystem_out1)  // uint32
                         );

  assign score = Subsystem_out1;

  Subsystem1 u_Subsystem1 (.clk(clk),
                           .reset_x(reset_x),
                           .enb(enb),
                           .reg_in(reg_in1),  // uint32
                           .enable(enable),
                           .reg_out(Subsystem1_out1)  // uint32
                           );

  assign a2 = Subsystem1_out1;

  Subsystem2 u_Subsystem2 (.clk(clk),
                           .reset_x(reset_x),
                           .enb(enb),
                           .reg_in(reg_in2),  // uint32
                           .enable(enable),
                           .reg_out(Subsystem2_out1)  // uint32
                           );

  assign a3 = Subsystem2_out1;

  Subsystem3 u_Subsystem3 (.clk(clk),
                           .reset_x(reset_x),
                           .enb(enb),
                           .reg_in(reg_in3),  // uint32
                           .enable(enable),
                           .reg_out(Subsystem3_out1)  // uint32
                           );

  assign a4 = Subsystem3_out1;

  Subsystem4 u_Subsystem4 (.clk(clk),
                           .reset_x(reset_x),
                           .enb(enb),
                           .reg_in(reg_in4),  // uint32
                           .enable(enable),
                           .reg_out(Subsystem4_out1)  // uint32
                           );

  assign b2 = Subsystem4_out1;

  Subsystem5 u_Subsystem5 (.clk(clk),
                           .reset_x(reset_x),
                           .enb(enb),
                           .reg_in(reg_in5),  // uint32
                           .enable(enable),
                           .reg_out(Subsystem5_out1)  // uint32
                           );

  assign b3 = Subsystem5_out1;

  Subsystem6 u_Subsystem6 (.clk(clk),
                           .reset_x(reset_x),
                           .enb(enb),
                           .reg_in(reg_in6),  // uint32
                           .enable(enable),
                           .reg_out(Subsystem6_out1)  // uint32
                           );

  assign b4 = Subsystem6_out1;

endmodule  // individual1

