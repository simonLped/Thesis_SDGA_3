###########################################################################
# Auto generated cosimulation 'tclstart' script 
###########################################################################
#  Source Model         : DUALportRAMinterface_v3
#  Generated Model      : gm_DUALportRAMinterface_v3
#  Cosimulation Model   : gm_DUALportRAMinterface_v3_vs
#
#  Source DUT           : gm_DUALportRAMinterface_v3_vs/PL
#  Cosimulation DUT     : gm_DUALportRAMinterface_v3_vs/PL_vs
#
#  File Location        : DUAL_port_RAM_and_GA3\hdlsrc\DUALportRAMinterface_v3\gm_DUALportRAMinterface_v3_vs.tcl
#  Created              : 2024-05-04 07:39:18
#
#  Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
###########################################################################

###########################################################################
#  ClockName           : clk
#  ResetName           : reset_x 
#  ClockEnableName     : clk_enable
#
#  ClockLowTime        : 5ns
#  ClockHighTime       : 5ns
#  ClockPeriod         : 10ns
#
#  ResetLength         : 20ns
#  ClockEnableDelay    : 10ns
#  HoldTime            : 2ns
###########################################################################

###########################################################################
#  ModelBaseSampleTime   : 3e-08
#  DutBaseSampleTime     : 3e-08
#  OverClockFactor     : 1
###########################################################################

###########################################################################
#  Mapping of DutBaseSampleTime to ClockPeriod
#
#  N = (ClockPeriod / DutBaseSampleTime) * OverClockFactor
#  1 sec in Simulink corresponds to 3.33333e+08ns in the HDL Simulator(N = 3.33333e+08)
#
###########################################################################

###########################################################################
#  ResetHighAt          : (ClockLowTime + ResetLength + HoldTime)
#  ResetRiseEdge        : 27ns
#  ResetType            : sync
#  ResetAssertedLevel   : 0
#
#  ClockEnableHighAt    : (ClockLowTime + ResetLength + ClockEnableDelay + HoldTime)
#  ClockEnableRiseEdge  : 37ns
###########################################################################


exec xvlog alpha16.v alpha15.v alpha14.v alpha13.v alpha12.v alpha11.v alpha10.v alpha9_ss.v alpha8_ss.v alpha7_ss.v alpha6_ss.v alpha5_ss.v alpha4_ss.v alpha3_ss.v alpha2_ss.v alpha1_ss.v alpha16bLFSR.v alpha16_block.v alpha15_block.v alpha14_block.v alpha13_block.v alpha12_block.v alpha11_block.v alpha10_block.v alpha9_ss_block.v alpha8_ss_block.v alpha7_ss_block.v alpha6_ss_block.v alpha5_ss_block.v alpha4_ss_block.v alpha3_ss_block.v alpha2_ss_block.v alpha1_ss_block.v alpha16bLFSR1.v modimpl_ntwk.v a2_random.v modimpl_ntwk_block.v a3_random.v modimpl_ntwk_block1.v a4_random.v modimpl_ntwk_block2.v b2_random.v modimpl_ntwk_block3.v b3_random.v modimpl_ntwk_block4.v b4_random.v random_gene.v random_method.v random_sample.v Subsystem.v TWDLROM.v MINRESRX2FFT_CTRL.v SimpleDualPortRAM_generic.v MINRESRX2FFT_MEMORY.v MINRESRX2FFT_BTFSEL.v Complex4Multiply.v MINRESRX2_BUTTERFLY.v MINRESRX2FFT_MEMSEL.v MINRESRX2FFT_OUTMux.v FFT.v alpha8bit_PE1.v alpha8bit_PE10.v alpha8bit_PE2.v alpha8bit_PE3.v alpha8bit_PE4.v alpha8bit_PE5.v alpha8bit_PE6.v alpha8bit_PE7.v alpha8bit_PE8.v alpha64bitmsb_finder.v accumulator_scorer.v Chart.v generation_counter.v output_selector.v Chart_block.v Subsystem_block.v Subsystem1.v Subsystem2.v Subsystem3.v Subsystem4.v Subsystem5.v Subsystem6.v individual3.v Subsystem_block1.v Subsystem1_block.v Subsystem2_block.v Subsystem3_block.v Subsystem4_block.v Subsystem5_block.v Subsystem6_block.v individual2.v Subsystem_block2.v Subsystem1_block1.v Subsystem2_block1.v Subsystem3_block1.v Subsystem4_block1.v Subsystem5_block1.v Subsystem6_block1.v individual1.v Subsystem_block3.v Subsystem1_block2.v Subsystem2_block2.v Subsystem3_block2.v Subsystem4_block2.v Subsystem5_block2.v Subsystem6_block2.v individual4.v swap_counter.v swap_counter1.v coefficent_array.v output_selector_block.v Chart_block1.v Subsystem_block4.v Subsystem1_block3.v Subsystem2_block3.v Subsystem3_block3.v Subsystem4_block3.v Subsystem5_block3.v Subsystem6_block3.v individual3_block.v Subsystem_block5.v Subsystem1_block4.v Subsystem2_block4.v Subsystem3_block4.v Subsystem4_block4.v Subsystem5_block4.v Subsystem6_block4.v individual2_block.v Subsystem_block6.v Subsystem1_block5.v Subsystem2_block5.v Subsystem3_block5.v Subsystem4_block5.v Subsystem5_block5.v Subsystem6_block5.v individual1_block.v Subsystem_block7.v Subsystem1_block6.v Subsystem2_block6.v Subsystem3_block6.v Subsystem4_block6.v Subsystem5_block6.v Subsystem6_block6.v individual4_block.v swap_counter_block.v swap_counter1_block.v coefficent_array1.v index_counter.v GA_main.v Subsystem1_block7.v Subsystem2_block7.v Subsystem3_block7.v Subsystem4_block7.v Subsystem5_block7.v Subsystem6_block7.v individual1_block1.v output_cast1.v D2.v Chart3.v Chart1.v Chart2.v SimpleDualPortRAM_generic_block.v HDL_FIFO1.v FIFO_system3.v HDL_FIFO1_block.v FIFO_system1.v integration_block1.v to_uint32_1.v to_uint32_2.v to_uint32_3.v to_uint32_4.v to_uint32_5.v to_uint32_6.v Chart_block2.v index_counter_block.v PL.v 
exec xelab PL --timescale 1ps/1ps --override_timeunit --override_timeprecision -dll --snapshot design -debug wave 

cd ../../../

# The xsim.dir must be in PWD
# - save off existing xsim.dir
if {[file exists xsim.dir] == 1} {
    set mtime [file mtime xsim.dir]
    set mtimestamp [clock format $mtime -format %Y%m%d_%H%M%S]
    set xsim_savefile "xsim.dir.$mtimestamp"
    file rename xsim.dir $xsim_savefile
}
# - copy up newly elaborated xsim.dir area from project to the current working directory.
set proj_xsim_dir {DUAL_port_RAM_and_GA3\hdlsrc\DUALportRAMinterface_v3/xsim.dir}
set proj_mtime [file mtime "$proj_xsim_dir/design"]
file copy -force $proj_xsim_dir .
file mtime xsim.dir $proj_mtime

