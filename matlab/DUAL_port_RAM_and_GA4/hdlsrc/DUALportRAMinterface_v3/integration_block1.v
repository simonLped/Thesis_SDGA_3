// -------------------------------------------------------------
// 
// File Name: DUAL_port_RAM_and_GA4\hdlsrc\DUALportRAMinterface_v3\integration_block1.v
// Created: 2024-05-15 10:45:59
// 
// Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: integration_block1
// Source Path: DUALportRAMinterface_v3/PL/integration_block1
// Hierarchy Level: 1
// Model version: 1.52
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module integration_block1
          (clk,
           reset_x,
           enb,
           data_in,
           data_in1,
           start_ga,
           ga_done,
           elite_individual_0,
           elite_individual_1,
           elite_individual_2,
           elite_individual_3,
           elite_individual_4,
           elite_individual_5,
           elite_individual_6);


  input   clk;
  input   reset_x;
  input   enb;
  input   signed [15:0] data_in;  // sfix16_En14
  input   signed [15:0] data_in1;  // sfix16_En14
  input   start_ga;
  output  ga_done;
  output  signed [32:0] elite_individual_0;  // sfix33_En15
  output  signed [32:0] elite_individual_1;  // sfix33_En15
  output  signed [32:0] elite_individual_2;  // sfix33_En15
  output  signed [32:0] elite_individual_3;  // sfix33_En15
  output  signed [32:0] elite_individual_4;  // sfix33_En15
  output  signed [32:0] elite_individual_5;  // sfix33_En15
  output  signed [32:0] elite_individual_6;  // sfix33_En15


  wire [2:0] Subsystem_out1;  // ufix3
  wire [2:0] Subsystem_out2;  // ufix3
  wire signed [17:0] Subsystem_out3;  // sfix18_En15
  wire signed [17:0] Subsystem_out4;  // sfix18_En15
  wire signed [17:0] Subsystem_out5;  // sfix18_En15
  wire signed [17:0] Subsystem_out6;  // sfix18_En15
  wire signed [17:0] Subsystem_out7;  // sfix18_En15
  wire signed [17:0] Subsystem_out8;  // sfix18_En15
  wire [3:0] Subsystem_out9;  // ufix4
  wire accumulator_scorer_out2;
  reg  Delay3_out1;
  wire FIFO_system1_out3;
  reg  [6144:0] Delay_reg;  // ufix1 [6145]
  wire Delay_out1;
  wire GA_main_out4;
  wire FIFO_system1_out4;
  wire signed [15:0] FIFO_system3_out1;  // sfix16_En14
  wire FIFO_system3_out2deadOutdeadOut;
  wire FIFO_system3_out3deadOutdeadOut;
  wire FIFO_system3_out4;
  wire signed [32:0] GA_main_out3_0;  // sfix33_En15
  wire signed [32:0] GA_main_out3_1;  // sfix33_En15
  wire signed [32:0] GA_main_out3_2;  // sfix33_En15
  wire signed [32:0] GA_main_out3_3;  // sfix33_En15
  wire signed [32:0] GA_main_out3_4;  // sfix33_En15
  wire signed [32:0] GA_main_out3_5;  // sfix33_En15
  wire signed [32:0] GA_main_out3_6;  // sfix33_En15
  wire signed [13:0] D2_out1;  // sfix14_En12
  wire load_fifo;
  wire signed [15:0] FIFO_system1_out1;  // sfix16_En14
  wire FIFO_system1_out2;
  wire signed [15:0] Sum_sub_cast;  // sfix16_En14
  wire signed [15:0] Sum_out1;  // sfix16_En14
  wire signed [27:0] FFT_out1_re;  // sfix28_En14
  wire signed [27:0] FFT_out1_im;  // sfix28_En14
  wire FFT_out2;
  wire FFT_out3deadOut;
  wire signed [32:0] accumulator_scorer_out1;  // sfix33_En15
  wire signed [32:0] GA_main_out1_0;  // sfix33_En15
  wire signed [32:0] GA_main_out1_1;  // sfix33_En15
  wire signed [32:0] GA_main_out1_2;  // sfix33_En15
  wire signed [32:0] GA_main_out1_3;  // sfix33_En15
  wire signed [32:0] GA_main_out1_4;  // sfix33_En15
  wire signed [32:0] GA_main_out1_5;  // sfix33_En15
  wire signed [32:0] GA_main_out1_6;  // sfix33_En15
  wire GA_done_1;


  Subsystem u_Subsystem (.clk(clk),
                         .reset_x(reset_x),
                         .enb(enb),
                         .enable(start_ga),
                         .random_gene_out(Subsystem_out1),  // ufix3
                         .random_method_out(Subsystem_out2),  // ufix3
                         .b2_random_out(Subsystem_out3),  // sfix18_En15
                         .b3_random_out(Subsystem_out4),  // sfix18_En15
                         .b4_random_out(Subsystem_out5),  // sfix18_En15
                         .a2_random_out(Subsystem_out6),  // sfix18_En15
                         .a3_random_out(Subsystem_out7),  // sfix18_En15
                         .a4_random_out(Subsystem_out8),  // sfix18_En15
                         .random_sample_out(Subsystem_out9)  // ufix4
                         );

  always @(posedge clk)
    begin : Delay3_process
      if (reset_x == 1'b0) begin
        Delay3_out1 <= 1'b0;
      end
      else begin
        if (enb) begin
          Delay3_out1 <= accumulator_scorer_out2;
        end
      end
    end



  always @(posedge clk)
    begin : Delay_process
      if (reset_x == 1'b0) begin
        Delay_reg <= {6145{1'b0}};
      end
      else begin
        if (enb) begin
          Delay_reg[0] <= FIFO_system1_out3;
          Delay_reg[32'sd6144:32'sd1] <= Delay_reg[32'sd6143:32'sd0];
        end
      end
    end

  assign Delay_out1 = Delay_reg[6144];



  FIFO_system3 u_FIFO_system3 (.clk(clk),
                               .reset_x(reset_x),
                               .enb(enb),
                               .data_in(data_in1),  // sfix16_En14
                               .enable_output(GA_main_out4),
                               .load_fifo(FIFO_system1_out4),
                               .data_out(FIFO_system3_out1),  // sfix16_En14
                               .data_valid(FIFO_system3_out2deadOutdeadOut),
                               .reset_fft(FIFO_system3_out3deadOutdeadOut),
                               .FIFO_full(FIFO_system3_out4)
                               );

  D2 u_D2 (.clk(clk),
           .reset_x(reset_x),
           .enb(enb),
           .GAerror(FIFO_system3_out1),  // sfix16_En14
           .push_individual(GA_main_out4),
           .reset_D2(Delay_out1),
           .Individual_input_0(GA_main_out3_0),  // sfix33_En15
           .Individual_input_1(GA_main_out3_1),  // sfix33_En15
           .Individual_input_2(GA_main_out3_2),  // sfix33_En15
           .Individual_input_3(GA_main_out3_3),  // sfix33_En15
           .Individual_input_4(GA_main_out3_4),  // sfix33_En15
           .Individual_input_5(GA_main_out3_5),  // sfix33_En15
           .Individual_input_6(GA_main_out3_6),  // sfix33_En15
           .response(D2_out1)  // sfix14_En12
           );

  FIFO_system1 u_FIFO_system1 (.clk(clk),
                               .reset_x(reset_x),
                               .enb(enb),
                               .data_in(data_in),  // sfix16_En14
                               .enable_output(GA_main_out4),
                               .load_fifo(load_fifo),
                               .data_out(FIFO_system1_out1),  // sfix16_En14
                               .data_valid(FIFO_system1_out2),
                               .reset_fft(FIFO_system1_out3),
                               .FIFO_full(FIFO_system1_out4)
                               );

  assign Sum_sub_cast = {D2_out1, 2'b00};
  assign Sum_out1 = FIFO_system1_out1 - Sum_sub_cast;



  FFT u_FFT (.clk(clk),
             .reset_x(reset_x),
             .enb(enb),
             .dataIn(Sum_out1),  // sfix16_En14
             .validIn(FIFO_system1_out2),
             .syncReset(FIFO_system1_out3),
             .dataOut_re(FFT_out1_re),  // sfix28_En14
             .dataOut_im(FFT_out1_im),  // sfix28_En14
             .validOut(FFT_out2),
             .ready(FFT_out3deadOut)
             );

  accumulator_scorer u_accumulator_scorer (.clk(clk),
                                           .reset_x(reset_x),
                                           .enb(enb),
                                           .data_in_re(FFT_out1_re),  // sfix28_En14
                                           .data_in_im(FFT_out1_im),  // sfix28_En14
                                           .valid_fft(FFT_out2),
                                           .individual_score(accumulator_scorer_out1),  // sfix33_En15
                                           .individual_score_valid(accumulator_scorer_out2)
                                           );

  GA_main u_GA_main (.clk(clk),
                     .reset_x(reset_x),
                     .enb(enb),
                     .start_ga(start_ga),
                     .score_result(accumulator_scorer_out1),  // sfix33_En15
                     .random_gene(Subsystem_out1),  // ufix3
                     .random_method(Subsystem_out2),  // ufix3
                     .b2rnd(Subsystem_out3),  // sfix18_En15
                     .b3rnd(Subsystem_out4),  // sfix18_En15
                     .b4rnd(Subsystem_out5),  // sfix18_En15
                     .a2rnd(Subsystem_out6),  // sfix18_En15
                     .a3rnd(Subsystem_out7),  // sfix18_En15
                     .a4rnd(Subsystem_out8),  // sfix18_En15
                     .tb_random_sample(Subsystem_out9),  // ufix4
                     .FIFO_full(FIFO_system3_out4),
                     .score_done(Delay3_out1),
                     .elite_individual_0(GA_main_out1_0),  // sfix33_En15
                     .elite_individual_1(GA_main_out1_1),  // sfix33_En15
                     .elite_individual_2(GA_main_out1_2),  // sfix33_En15
                     .elite_individual_3(GA_main_out1_3),  // sfix33_En15
                     .elite_individual_4(GA_main_out1_4),  // sfix33_En15
                     .elite_individual_5(GA_main_out1_5),  // sfix33_En15
                     .elite_individual_6(GA_main_out1_6),  // sfix33_En15
                     .ga_done(GA_done_1),
                     .individual_to_d2_0(GA_main_out3_0),  // sfix33_En15
                     .individual_to_d2_1(GA_main_out3_1),  // sfix33_En15
                     .individual_to_d2_2(GA_main_out3_2),  // sfix33_En15
                     .individual_to_d2_3(GA_main_out3_3),  // sfix33_En15
                     .individual_to_d2_4(GA_main_out3_4),  // sfix33_En15
                     .individual_to_d2_5(GA_main_out3_5),  // sfix33_En15
                     .individual_to_d2_6(GA_main_out3_6),  // sfix33_En15
                     .FIFO_out_en(GA_main_out4),
                     .load_fifo(load_fifo)
                     );

  assign ga_done = GA_done_1;

  assign elite_individual_0 = GA_main_out1_0;

  assign elite_individual_1 = GA_main_out1_1;

  assign elite_individual_2 = GA_main_out1_2;

  assign elite_individual_3 = GA_main_out1_3;

  assign elite_individual_4 = GA_main_out1_4;

  assign elite_individual_5 = GA_main_out1_5;

  assign elite_individual_6 = GA_main_out1_6;

endmodule  // integration_block1

